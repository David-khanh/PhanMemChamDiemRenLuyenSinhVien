#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_DanhGiaDiemRL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_DiemRL")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChamDiemRL(ChamDiemRL instance);
    partial void UpdateChamDiemRL(ChamDiemRL instance);
    partial void DeleteChamDiemRL(ChamDiemRL instance);
    partial void InsertChiTieuPhieuCham(ChiTieuPhieuCham instance);
    partial void UpdateChiTieuPhieuCham(ChiTieuPhieuCham instance);
    partial void DeleteChiTieuPhieuCham(ChiTieuPhieuCham instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertLop(Lop instance);
    partial void UpdateLop(Lop instance);
    partial void DeleteLop(Lop instance);
    partial void InsertLuong(Luong instance);
    partial void UpdateLuong(Luong instance);
    partial void DeleteLuong(Luong instance);
    partial void InsertNoiDung(NoiDung instance);
    partial void UpdateNoiDung(NoiDung instance);
    partial void DeleteNoiDung(NoiDung instance);
    partial void InsertPhieuCham(PhieuCham instance);
    partial void UpdatePhieuCham(PhieuCham instance);
    partial void DeletePhieuCham(PhieuCham instance);
    partial void InsertSinhVien(SinhVien instance);
    partial void UpdateSinhVien(SinhVien instance);
    partial void DeleteSinhVien(SinhVien instance);
    partial void InsertTaikhoan(Taikhoan instance);
    partial void UpdateTaikhoan(Taikhoan instance);
    partial void DeleteTaikhoan(Taikhoan instance);
    partial void InsertTieuChi(TieuChi instance);
    partial void UpdateTieuChi(TieuChi instance);
    partial void DeleteTieuChi(TieuChi instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::QL_DanhGiaDiemRL.Properties.Settings.Default.QL_DiemRLConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChamDiemRL> ChamDiemRLs
		{
			get
			{
				return this.GetTable<ChamDiemRL>();
			}
		}
		
		public System.Data.Linq.Table<ChiTieuPhieuCham> ChiTieuPhieuChams
		{
			get
			{
				return this.GetTable<ChiTieuPhieuCham>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<Lop> Lops
		{
			get
			{
				return this.GetTable<Lop>();
			}
		}
		
		public System.Data.Linq.Table<Luong> Luongs
		{
			get
			{
				return this.GetTable<Luong>();
			}
		}
		
		public System.Data.Linq.Table<NoiDung> NoiDungs
		{
			get
			{
				return this.GetTable<NoiDung>();
			}
		}
		
		public System.Data.Linq.Table<PhieuCham> PhieuChams
		{
			get
			{
				return this.GetTable<PhieuCham>();
			}
		}
		
		public System.Data.Linq.Table<SinhVien> SinhViens
		{
			get
			{
				return this.GetTable<SinhVien>();
			}
		}
		
		public System.Data.Linq.Table<Taikhoan> Taikhoans
		{
			get
			{
				return this.GetTable<Taikhoan>();
			}
		}
		
		public System.Data.Linq.Table<TieuChi> TieuChis
		{
			get
			{
				return this.GetTable<TieuChi>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChamDiemRL")]
	public partial class ChamDiemRL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maSV;
		
		private int _maPhieuCham;

		
		private System.Nullable<int> _diemRL;
        private EntityRef<PhieuCham> _PhieuCham;
		
		private EntityRef<SinhVien> _SinhVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSVChanging(int value);
    partial void OnmaSVChanged();
    partial void OnmaPhieuChamChanging(int value);
    partial void OnmaPhieuChamChanged();
    partial void OndiemRLChanging(System.Nullable<int> value);
    partial void OndiemRLChanged();
    #endregion
		
		public ChamDiemRL()
		{
			this._PhieuCham = default(EntityRef<PhieuCham>);
			this._SinhVien = default(EntityRef<SinhVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maSV
		{
			get
			{
				return this._maSV;
			}
			set
			{
				if ((this._maSV != value))
				{
					if (this._SinhVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaSVChanging(value);
					this.SendPropertyChanging();
					this._maSV = value;
					this.SendPropertyChanged("maSV");
					this.OnmaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhieuCham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maPhieuCham
		{
			get
			{
				return this._maPhieuCham;
			}
			set
			{
				if ((this._maPhieuCham != value))
				{
					if (this._PhieuCham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaPhieuChamChanging(value);
					this.SendPropertyChanging();
					this._maPhieuCham = value;
					this.SendPropertyChanged("maPhieuCham");
					this.OnmaPhieuChamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemRL", DbType="Int")]
		public System.Nullable<int> diemRL
		{
			get
			{
				return this._diemRL;
			}
			set
			{
				if ((this._diemRL != value))
				{
					this.OndiemRLChanging(value);
					this.SendPropertyChanging();
					this._diemRL = value;
					this.SendPropertyChanged("diemRL");
					this.OndiemRLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuCham_ChamDiemRL", Storage="_PhieuCham", ThisKey="maPhieuCham", OtherKey="maPhieuCham", IsForeignKey=true)]
		public PhieuCham PhieuCham
		{
			get
			{
				return this._PhieuCham.Entity;
			}
			set
			{
				PhieuCham previousValue = this._PhieuCham.Entity;
				if (((previousValue != value) 
							|| (this._PhieuCham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuCham.Entity = null;
						previousValue.ChamDiemRLs.Remove(this);
					}
					this._PhieuCham.Entity = value;
					if ((value != null))
					{
						value.ChamDiemRLs.Add(this);
						this._maPhieuCham = value.maPhieuCham;
					}
					else
					{
						this._maPhieuCham = default(int);
					}
					this.SendPropertyChanged("PhieuCham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_ChamDiemRL", Storage="_SinhVien", ThisKey="maSV", OtherKey="maSV", IsForeignKey=true)]
		public SinhVien SinhVien
		{
			get
			{
				return this._SinhVien.Entity;
			}
			set
			{
				SinhVien previousValue = this._SinhVien.Entity;
				if (((previousValue != value) 
							|| (this._SinhVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SinhVien.Entity = null;
						previousValue.ChamDiemRLs.Remove(this);
					}
					this._SinhVien.Entity = value;
					if ((value != null))
					{
						value.ChamDiemRLs.Add(this);
						this._maSV = value.maSV;
					}
					else
					{
						this._maSV = default(int);
					}
					this.SendPropertyChanged("SinhVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTieuPhieuCham")]
	public partial class ChiTieuPhieuCham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maPhieuCham;
		
		private int _maTieuChi;
		
		private int _maNoiDung;
		
		private System.Nullable<int> _diemRL1;
		
		private System.Nullable<int> _diemL2;
		
		private System.Nullable<int> _diemL3;
		
		private EntityRef<NoiDung> _NoiDung;
		
		private EntityRef<PhieuCham> _PhieuCham;
		
		private EntityRef<TieuChi> _TieuChi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaPhieuChamChanging(int value);
    partial void OnmaPhieuChamChanged();
    partial void OnmaTieuChiChanging(int value);
    partial void OnmaTieuChiChanged();
    partial void OnmaNoiDungChanging(int value);
    partial void OnmaNoiDungChanged();
    partial void OndiemRL1Changing(System.Nullable<int> value);
    partial void OndiemRL1Changed();
    partial void OndiemL2Changing(System.Nullable<int> value);
    partial void OndiemL2Changed();
    partial void OndiemL3Changing(System.Nullable<int> value);
    partial void OndiemL3Changed();
    #endregion
		
		public ChiTieuPhieuCham()
		{
			this._NoiDung = default(EntityRef<NoiDung>);
			this._PhieuCham = default(EntityRef<PhieuCham>);
			this._TieuChi = default(EntityRef<TieuChi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhieuCham", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maPhieuCham
		{
			get
			{
				return this._maPhieuCham;
			}
			set
			{
				if ((this._maPhieuCham != value))
				{
					if (this._PhieuCham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaPhieuChamChanging(value);
					this.SendPropertyChanging();
					this._maPhieuCham = value;
					this.SendPropertyChanged("maPhieuCham");
					this.OnmaPhieuChamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTieuChi", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maTieuChi
		{
			get
			{
				return this._maTieuChi;
			}
			set
			{
				if ((this._maTieuChi != value))
				{
					if (this._TieuChi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaTieuChiChanging(value);
					this.SendPropertyChanging();
					this._maTieuChi = value;
					this.SendPropertyChanged("maTieuChi");
					this.OnmaTieuChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNoiDung", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maNoiDung
		{
			get
			{
				return this._maNoiDung;
			}
			set
			{
				if ((this._maNoiDung != value))
				{
					if (this._NoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaNoiDungChanging(value);
					this.SendPropertyChanging();
					this._maNoiDung = value;
					this.SendPropertyChanged("maNoiDung");
					this.OnmaNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemRL1", DbType="Int")]
		public System.Nullable<int> diemRL1
		{
			get
			{
				return this._diemRL1;
			}
			set
			{
				if ((this._diemRL1 != value))
				{
					this.OndiemRL1Changing(value);
					this.SendPropertyChanging();
					this._diemRL1 = value;
					this.SendPropertyChanged("diemRL1");
					this.OndiemRL1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemL2", DbType="Int")]
		public System.Nullable<int> diemL2
		{
			get
			{
				return this._diemL2;
			}
			set
			{
				if ((this._diemL2 != value))
				{
					this.OndiemL2Changing(value);
					this.SendPropertyChanging();
					this._diemL2 = value;
					this.SendPropertyChanged("diemL2");
					this.OndiemL2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemL3", DbType="Int")]
		public System.Nullable<int> diemL3
		{
			get
			{
				return this._diemL3;
			}
			set
			{
				if ((this._diemL3 != value))
				{
					this.OndiemL3Changing(value);
					this.SendPropertyChanging();
					this._diemL3 = value;
					this.SendPropertyChanged("diemL3");
					this.OndiemL3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NoiDung_ChiTieuPhieuCham", Storage="_NoiDung", ThisKey="maNoiDung", OtherKey="maNoiDung", IsForeignKey=true)]
		public NoiDung NoiDung
		{
			get
			{
				return this._NoiDung.Entity;
			}
			set
			{
				NoiDung previousValue = this._NoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NoiDung.Entity = null;
						previousValue.ChiTieuPhieuChams.Remove(this);
					}
					this._NoiDung.Entity = value;
					if ((value != null))
					{
						value.ChiTieuPhieuChams.Add(this);
						this._maNoiDung = value.maNoiDung;
					}
					else
					{
						this._maNoiDung = default(int);
					}
					this.SendPropertyChanged("NoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuCham_ChiTieuPhieuCham", Storage="_PhieuCham", ThisKey="maPhieuCham", OtherKey="maPhieuCham", IsForeignKey=true)]
		public PhieuCham PhieuCham
		{
			get
			{
				return this._PhieuCham.Entity;
			}
			set
			{
				PhieuCham previousValue = this._PhieuCham.Entity;
				if (((previousValue != value) 
							|| (this._PhieuCham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhieuCham.Entity = null;
						previousValue.ChiTieuPhieuChams.Remove(this);
					}
					this._PhieuCham.Entity = value;
					if ((value != null))
					{
						value.ChiTieuPhieuChams.Add(this);
						this._maPhieuCham = value.maPhieuCham;
					}
					else
					{
						this._maPhieuCham = default(int);
					}
					this.SendPropertyChanged("PhieuCham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuChi_ChiTieuPhieuCham", Storage="_TieuChi", ThisKey="maTieuChi", OtherKey="maTieuChi", IsForeignKey=true)]
		public TieuChi TieuChi
		{
			get
			{
				return this._TieuChi.Entity;
			}
			set
			{
				TieuChi previousValue = this._TieuChi.Entity;
				if (((previousValue != value) 
							|| (this._TieuChi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TieuChi.Entity = null;
						previousValue.ChiTieuPhieuChams.Remove(this);
					}
					this._TieuChi.Entity = value;
					if ((value != null))
					{
						value.ChiTieuPhieuChams.Add(this);
						this._maTieuChi = value.maTieuChi;
					}
					else
					{
						this._maTieuChi = default(int);
					}
					this.SendPropertyChanged("TieuChi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maKhoa;
		
		private string _tenKhoa;
		
		private EntitySet<Lop> _Lops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaKhoaChanging(int value);
    partial void OnmaKhoaChanged();
    partial void OntenKhoaChanging(string value);
    partial void OntenKhoaChanged();
    #endregion
		
		public Khoa()
		{
			this._Lops = new EntitySet<Lop>(new Action<Lop>(this.attach_Lops), new Action<Lop>(this.detach_Lops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoa", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maKhoa
		{
			get
			{
				return this._maKhoa;
			}
			set
			{
				if ((this._maKhoa != value))
				{
					this.OnmaKhoaChanging(value);
					this.SendPropertyChanging();
					this._maKhoa = value;
					this.SendPropertyChanged("maKhoa");
					this.OnmaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenKhoa", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string tenKhoa
		{
			get
			{
				return this._tenKhoa;
			}
			set
			{
				if ((this._tenKhoa != value))
				{
					this.OntenKhoaChanging(value);
					this.SendPropertyChanging();
					this._tenKhoa = value;
					this.SendPropertyChanged("tenKhoa");
					this.OntenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Lops", ThisKey="maKhoa", OtherKey="maKhoa")]
		public EntitySet<Lop> Lops
		{
			get
			{
				return this._Lops;
			}
			set
			{
				this._Lops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_Lops(Lop entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lop")]
	public partial class Lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maLop;
		
		private string _tenLop;
		
		private System.Nullable<int> _maKhoa;
		
		private EntitySet<SinhVien> _SinhViens;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaLopChanging(int value);
    partial void OnmaLopChanged();
    partial void OntenLopChanging(string value);
    partial void OntenLopChanged();
    partial void OnmaKhoaChanging(System.Nullable<int> value);
    partial void OnmaKhoaChanged();
    #endregion
		
		public Lop()
		{
			this._SinhViens = new EntitySet<SinhVien>(new Action<SinhVien>(this.attach_SinhViens), new Action<SinhVien>(this.detach_SinhViens));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maLop
		{
			get
			{
				return this._maLop;
			}
			set
			{
				if ((this._maLop != value))
				{
					this.OnmaLopChanging(value);
					this.SendPropertyChanging();
					this._maLop = value;
					this.SendPropertyChanged("maLop");
					this.OnmaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenLop", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string tenLop
		{
			get
			{
				return this._tenLop;
			}
			set
			{
				if ((this._tenLop != value))
				{
					this.OntenLopChanging(value);
					this.SendPropertyChanging();
					this._tenLop = value;
					this.SendPropertyChanged("tenLop");
					this.OntenLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maKhoa", DbType="Int")]
		public System.Nullable<int> maKhoa
		{
			get
			{
				return this._maKhoa;
			}
			set
			{
				if ((this._maKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaKhoaChanging(value);
					this.SendPropertyChanging();
					this._maKhoa = value;
					this.SendPropertyChanged("maKhoa");
					this.OnmaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_SinhViens", ThisKey="maLop", OtherKey="maLop")]
		public EntitySet<SinhVien> SinhViens
		{
			get
			{
				return this._SinhViens;
			}
			set
			{
				this._SinhViens.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Lop", Storage="_Khoa", ThisKey="maKhoa", OtherKey="maKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.Lops.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.Lops.Add(this);
						this._maKhoa = value.maKhoa;
					}
					else
					{
						this._maKhoa = default(Nullable<int>);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop = this;
		}
		
		private void detach_SinhViens(SinhVien entity)
		{
			this.SendPropertyChanging();
			entity.Lop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Luong")]
	public partial class Luong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLuong;
		
		private string _TenLuong;
		
		private EntitySet<Taikhoan> _Taikhoans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLuongChanging(int value);
    partial void OnIdLuongChanged();
    partial void OnTenLuongChanging(string value);
    partial void OnTenLuongChanged();
    #endregion
		
		public Luong()
		{
			this._Taikhoans = new EntitySet<Taikhoan>(new Action<Taikhoan>(this.attach_Taikhoans), new Action<Taikhoan>(this.detach_Taikhoans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLuong", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLuong
		{
			get
			{
				return this._IdLuong;
			}
			set
			{
				if ((this._IdLuong != value))
				{
					this.OnIdLuongChanging(value);
					this.SendPropertyChanging();
					this._IdLuong = value;
					this.SendPropertyChanged("IdLuong");
					this.OnIdLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLuong", DbType="NVarChar(255)")]
		public string TenLuong
		{
			get
			{
				return this._TenLuong;
			}
			set
			{
				if ((this._TenLuong != value))
				{
					this.OnTenLuongChanging(value);
					this.SendPropertyChanging();
					this._TenLuong = value;
					this.SendPropertyChanged("TenLuong");
					this.OnTenLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Luong_Taikhoan", Storage="_Taikhoans", ThisKey="IdLuong", OtherKey="IdLuong")]
		public EntitySet<Taikhoan> Taikhoans
		{
			get
			{
				return this._Taikhoans;
			}
			set
			{
				this._Taikhoans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Taikhoans(Taikhoan entity)
		{
			this.SendPropertyChanging();
			entity.Luong = this;
		}
		
		private void detach_Taikhoans(Taikhoan entity)
		{
			this.SendPropertyChanging();
			entity.Luong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NoiDung")]
	public partial class NoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maNoiDung;
		
		private string _tenNoiDung;
		
		private System.Nullable<int> _diemToiDa;
		
		private System.Nullable<int> _maTieuChi;
		
		private EntitySet<ChiTieuPhieuCham> _ChiTieuPhieuChams;
		
		private EntityRef<TieuChi> _TieuChi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaNoiDungChanging(int value);
    partial void OnmaNoiDungChanged();
    partial void OntenNoiDungChanging(string value);
    partial void OntenNoiDungChanged();
    partial void OndiemToiDaChanging(System.Nullable<int> value);
    partial void OndiemToiDaChanged();
    partial void OnmaTieuChiChanging(System.Nullable<int> value);
    partial void OnmaTieuChiChanged();
    #endregion
		
		public NoiDung()
		{
			this._ChiTieuPhieuChams = new EntitySet<ChiTieuPhieuCham>(new Action<ChiTieuPhieuCham>(this.attach_ChiTieuPhieuChams), new Action<ChiTieuPhieuCham>(this.detach_ChiTieuPhieuChams));
			this._TieuChi = default(EntityRef<TieuChi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maNoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maNoiDung
		{
			get
			{
				return this._maNoiDung;
			}
			set
			{
				if ((this._maNoiDung != value))
				{
					this.OnmaNoiDungChanging(value);
					this.SendPropertyChanging();
					this._maNoiDung = value;
					this.SendPropertyChanged("maNoiDung");
					this.OnmaNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenNoiDung", DbType="NVarChar(MAX)")]
		public string tenNoiDung
		{
			get
			{
				return this._tenNoiDung;
			}
			set
			{
				if ((this._tenNoiDung != value))
				{
					this.OntenNoiDungChanging(value);
					this.SendPropertyChanging();
					this._tenNoiDung = value;
					this.SendPropertyChanged("tenNoiDung");
					this.OntenNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemToiDa", DbType="Int")]
		public System.Nullable<int> diemToiDa
		{
			get
			{
				return this._diemToiDa;
			}
			set
			{
				if ((this._diemToiDa != value))
				{
					this.OndiemToiDaChanging(value);
					this.SendPropertyChanging();
					this._diemToiDa = value;
					this.SendPropertyChanged("diemToiDa");
					this.OndiemToiDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTieuChi", DbType="Int")]
		public System.Nullable<int> maTieuChi
		{
			get
			{
				return this._maTieuChi;
			}
			set
			{
				if ((this._maTieuChi != value))
				{
					if (this._TieuChi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaTieuChiChanging(value);
					this.SendPropertyChanging();
					this._maTieuChi = value;
					this.SendPropertyChanged("maTieuChi");
					this.OnmaTieuChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NoiDung_ChiTieuPhieuCham", Storage="_ChiTieuPhieuChams", ThisKey="maNoiDung", OtherKey="maNoiDung")]
		public EntitySet<ChiTieuPhieuCham> ChiTieuPhieuChams
		{
			get
			{
				return this._ChiTieuPhieuChams;
			}
			set
			{
				this._ChiTieuPhieuChams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuChi_NoiDung", Storage="_TieuChi", ThisKey="maTieuChi", OtherKey="maTieuChi", IsForeignKey=true)]
		public TieuChi TieuChi
		{
			get
			{
				return this._TieuChi.Entity;
			}
			set
			{
				TieuChi previousValue = this._TieuChi.Entity;
				if (((previousValue != value) 
							|| (this._TieuChi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TieuChi.Entity = null;
						previousValue.NoiDungs.Remove(this);
					}
					this._TieuChi.Entity = value;
					if ((value != null))
					{
						value.NoiDungs.Add(this);
						this._maTieuChi = value.maTieuChi;
					}
					else
					{
						this._maTieuChi = default(Nullable<int>);
					}
					this.SendPropertyChanged("TieuChi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTieuPhieuChams(ChiTieuPhieuCham entity)
		{
			this.SendPropertyChanging();
			entity.NoiDung = this;
		}
		
		private void detach_ChiTieuPhieuChams(ChiTieuPhieuCham entity)
		{
			this.SendPropertyChanging();
			entity.NoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuCham")]
	public partial class PhieuCham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maPhieuCham;
		
		private System.Nullable<System.DateTime> _ngayLap;
		
		private string _nienKhoa;
		
		private string _hocKi;
		
		private EntitySet<ChamDiemRL> _ChamDiemRLs;
		
		private EntitySet<ChiTieuPhieuCham> _ChiTieuPhieuChams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaPhieuChamChanging(int value);
    partial void OnmaPhieuChamChanged();
    partial void OnngayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnngayLapChanged();
    partial void OnnienKhoaChanging(string value);
    partial void OnnienKhoaChanged();
    partial void OnhocKiChanging(string value);
    partial void OnhocKiChanged();
    #endregion
		
		public PhieuCham()
		{
			this._ChamDiemRLs = new EntitySet<ChamDiemRL>(new Action<ChamDiemRL>(this.attach_ChamDiemRLs), new Action<ChamDiemRL>(this.detach_ChamDiemRLs));
			this._ChiTieuPhieuChams = new EntitySet<ChiTieuPhieuCham>(new Action<ChiTieuPhieuCham>(this.attach_ChiTieuPhieuChams), new Action<ChiTieuPhieuCham>(this.detach_ChiTieuPhieuChams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maPhieuCham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maPhieuCham
		{
			get
			{
				return this._maPhieuCham;
			}
			set
			{
				if ((this._maPhieuCham != value))
				{
					this.OnmaPhieuChamChanging(value);
					this.SendPropertyChanging();
					this._maPhieuCham = value;
					this.SendPropertyChanged("maPhieuCham");
					this.OnmaPhieuChamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngayLap", DbType="Date")]
		public System.Nullable<System.DateTime> ngayLap
		{
			get
			{
				return this._ngayLap;
			}
			set
			{
				if ((this._ngayLap != value))
				{
					this.OnngayLapChanging(value);
					this.SendPropertyChanging();
					this._ngayLap = value;
					this.SendPropertyChanged("ngayLap");
					this.OnngayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nienKhoa", DbType="NVarChar(10)")]
		public string nienKhoa
		{
			get
			{
				return this._nienKhoa;
			}
			set
			{
				if ((this._nienKhoa != value))
				{
					this.OnnienKhoaChanging(value);
					this.SendPropertyChanging();
					this._nienKhoa = value;
					this.SendPropertyChanged("nienKhoa");
					this.OnnienKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hocKi", DbType="NVarChar(10)")]
		public string hocKi
		{
			get
			{
				return this._hocKi;
			}
			set
			{
				if ((this._hocKi != value))
				{
					this.OnhocKiChanging(value);
					this.SendPropertyChanging();
					this._hocKi = value;
					this.SendPropertyChanged("hocKi");
					this.OnhocKiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuCham_ChamDiemRL", Storage="_ChamDiemRLs", ThisKey="maPhieuCham", OtherKey="maPhieuCham")]
		public EntitySet<ChamDiemRL> ChamDiemRLs
		{
			get
			{
				return this._ChamDiemRLs;
			}
			set
			{
				this._ChamDiemRLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhieuCham_ChiTieuPhieuCham", Storage="_ChiTieuPhieuChams", ThisKey="maPhieuCham", OtherKey="maPhieuCham")]
		public EntitySet<ChiTieuPhieuCham> ChiTieuPhieuChams
		{
			get
			{
				return this._ChiTieuPhieuChams;
			}
			set
			{
				this._ChiTieuPhieuChams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChamDiemRLs(ChamDiemRL entity)
		{
			this.SendPropertyChanging();
			entity.PhieuCham = this;
		}
		
		private void detach_ChamDiemRLs(ChamDiemRL entity)
		{
			this.SendPropertyChanging();
			entity.PhieuCham = null;
		}
		
		private void attach_ChiTieuPhieuChams(ChiTieuPhieuCham entity)
		{
			this.SendPropertyChanging();
			entity.PhieuCham = this;
		}
		
		private void detach_ChiTieuPhieuChams(ChiTieuPhieuCham entity)
		{
			this.SendPropertyChanging();
			entity.PhieuCham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SinhVien")]
	public partial class SinhVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maSV;
		
		private string _hoTen;
		
		private System.DateTime _ngaySinh;
		
		private string _diaChi;
		
		private string _soDienThoai;
		
		private string _matKhau;
		
		private System.Nullable<int> _maLop;
		
		private EntitySet<ChamDiemRL> _ChamDiemRLs;
		
		private EntityRef<Lop> _Lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaSVChanging(int value);
    partial void OnmaSVChanged();
    partial void OnhoTenChanging(string value);
    partial void OnhoTenChanged();
    partial void OnngaySinhChanging(System.DateTime value);
    partial void OnngaySinhChanged();
    partial void OndiaChiChanging(string value);
    partial void OndiaChiChanged();
    partial void OnsoDienThoaiChanging(string value);
    partial void OnsoDienThoaiChanged();
    partial void OnmatKhauChanging(string value);
    partial void OnmatKhauChanged();
    partial void OnmaLopChanging(System.Nullable<int> value);
    partial void OnmaLopChanged();
    #endregion
		
		public SinhVien()
		{
			this._ChamDiemRLs = new EntitySet<ChamDiemRL>(new Action<ChamDiemRL>(this.attach_ChamDiemRLs), new Action<ChamDiemRL>(this.detach_ChamDiemRLs));
			this._Lop = default(EntityRef<Lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maSV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maSV
		{
			get
			{
				return this._maSV;
			}
			set
			{
				if ((this._maSV != value))
				{
					this.OnmaSVChanging(value);
					this.SendPropertyChanging();
					this._maSV = value;
					this.SendPropertyChanged("maSV");
					this.OnmaSVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoTen", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string hoTen
		{
			get
			{
				return this._hoTen;
			}
			set
			{
				if ((this._hoTen != value))
				{
					this.OnhoTenChanging(value);
					this.SendPropertyChanging();
					this._hoTen = value;
					this.SendPropertyChanged("hoTen");
					this.OnhoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaySinh", DbType="Date NOT NULL")]
		public System.DateTime ngaySinh
		{
			get
			{
				return this._ngaySinh;
			}
			set
			{
				if ((this._ngaySinh != value))
				{
					this.OnngaySinhChanging(value);
					this.SendPropertyChanging();
					this._ngaySinh = value;
					this.SendPropertyChanged("ngaySinh");
					this.OnngaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diaChi", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string diaChi
		{
			get
			{
				return this._diaChi;
			}
			set
			{
				if ((this._diaChi != value))
				{
					this.OndiaChiChanging(value);
					this.SendPropertyChanging();
					this._diaChi = value;
					this.SendPropertyChanged("diaChi");
					this.OndiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soDienThoai", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string soDienThoai
		{
			get
			{
				return this._soDienThoai;
			}
			set
			{
				if ((this._soDienThoai != value))
				{
					this.OnsoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._soDienThoai = value;
					this.SendPropertyChanged("soDienThoai");
					this.OnsoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matKhau", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string matKhau
		{
			get
			{
				return this._matKhau;
			}
			set
			{
				if ((this._matKhau != value))
				{
					this.OnmatKhauChanging(value);
					this.SendPropertyChanging();
					this._matKhau = value;
					this.SendPropertyChanged("matKhau");
					this.OnmatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maLop", DbType="Int")]
		public System.Nullable<int> maLop
		{
			get
			{
				return this._maLop;
			}
			set
			{
				if ((this._maLop != value))
				{
					if (this._Lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaLopChanging(value);
					this.SendPropertyChanging();
					this._maLop = value;
					this.SendPropertyChanged("maLop");
					this.OnmaLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SinhVien_ChamDiemRL", Storage="_ChamDiemRLs", ThisKey="maSV", OtherKey="maSV")]
		public EntitySet<ChamDiemRL> ChamDiemRLs
		{
			get
			{
				return this._ChamDiemRLs;
			}
			set
			{
				this._ChamDiemRLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lop_SinhVien", Storage="_Lop", ThisKey="maLop", OtherKey="maLop", IsForeignKey=true)]
		public Lop Lop
		{
			get
			{
				return this._Lop.Entity;
			}
			set
			{
				Lop previousValue = this._Lop.Entity;
				if (((previousValue != value) 
							|| (this._Lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lop.Entity = null;
						previousValue.SinhViens.Remove(this);
					}
					this._Lop.Entity = value;
					if ((value != null))
					{
						value.SinhViens.Add(this);
						this._maLop = value.maLop;
					}
					else
					{
						this._maLop = default(Nullable<int>);
					}
					this.SendPropertyChanged("Lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChamDiemRLs(ChamDiemRL entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = this;
		}
		
		private void detach_ChamDiemRLs(ChamDiemRL entity)
		{
			this.SendPropertyChanging();
			entity.SinhVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Taikhoan")]
	public partial class Taikhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Idtaikhoan;
		
		private string _taikhoan1;
		
		private string _matkhau;
		
		private System.Nullable<int> _IdLuong;
		
		private EntityRef<Luong> _Luong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdtaikhoanChanging(int value);
    partial void OnIdtaikhoanChanged();
    partial void Ontaikhoan1Changing(string value);
    partial void Ontaikhoan1Changed();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    partial void OnIdLuongChanging(System.Nullable<int> value);
    partial void OnIdLuongChanged();
    #endregion
		
		public Taikhoan()
		{
			this._Luong = default(EntityRef<Luong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Idtaikhoan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Idtaikhoan
		{
			get
			{
				return this._Idtaikhoan;
			}
			set
			{
				if ((this._Idtaikhoan != value))
				{
					this.OnIdtaikhoanChanging(value);
					this.SendPropertyChanging();
					this._Idtaikhoan = value;
					this.SendPropertyChanged("Idtaikhoan");
					this.OnIdtaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="taikhoan", Storage="_taikhoan1", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string taikhoan1
		{
			get
			{
				return this._taikhoan1;
			}
			set
			{
				if ((this._taikhoan1 != value))
				{
					this.Ontaikhoan1Changing(value);
					this.SendPropertyChanging();
					this._taikhoan1 = value;
					this.SendPropertyChanged("taikhoan1");
					this.Ontaikhoan1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLuong", DbType="Int")]
		public System.Nullable<int> IdLuong
		{
			get
			{
				return this._IdLuong;
			}
			set
			{
				if ((this._IdLuong != value))
				{
					if (this._Luong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLuongChanging(value);
					this.SendPropertyChanging();
					this._IdLuong = value;
					this.SendPropertyChanged("IdLuong");
					this.OnIdLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Luong_Taikhoan", Storage="_Luong", ThisKey="IdLuong", OtherKey="IdLuong", IsForeignKey=true)]
		public Luong Luong
		{
			get
			{
				return this._Luong.Entity;
			}
			set
			{
				Luong previousValue = this._Luong.Entity;
				if (((previousValue != value) 
							|| (this._Luong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Luong.Entity = null;
						previousValue.Taikhoans.Remove(this);
					}
					this._Luong.Entity = value;
					if ((value != null))
					{
						value.Taikhoans.Add(this);
						this._IdLuong = value.IdLuong;
					}
					else
					{
						this._IdLuong = default(Nullable<int>);
					}
					this.SendPropertyChanged("Luong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TieuChi")]
	public partial class TieuChi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maTieuChi;
		
		private string _tenTieuChi;
		
		private System.Nullable<int> _diemToiDa;
		
		private EntitySet<ChiTieuPhieuCham> _ChiTieuPhieuChams;
		
		private EntitySet<NoiDung> _NoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaTieuChiChanging(int value);
    partial void OnmaTieuChiChanged();
    partial void OntenTieuChiChanging(string value);
    partial void OntenTieuChiChanged();
    partial void OndiemToiDaChanging(System.Nullable<int> value);
    partial void OndiemToiDaChanged();
    #endregion
		
		public TieuChi()
		{
			this._ChiTieuPhieuChams = new EntitySet<ChiTieuPhieuCham>(new Action<ChiTieuPhieuCham>(this.attach_ChiTieuPhieuChams), new Action<ChiTieuPhieuCham>(this.detach_ChiTieuPhieuChams));
			this._NoiDungs = new EntitySet<NoiDung>(new Action<NoiDung>(this.attach_NoiDungs), new Action<NoiDung>(this.detach_NoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maTieuChi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int maTieuChi
		{
			get
			{
				return this._maTieuChi;
			}
			set
			{
				if ((this._maTieuChi != value))
				{
					this.OnmaTieuChiChanging(value);
					this.SendPropertyChanging();
					this._maTieuChi = value;
					this.SendPropertyChanged("maTieuChi");
					this.OnmaTieuChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenTieuChi", DbType="NVarChar(MAX)")]
		public string tenTieuChi
		{
			get
			{
				return this._tenTieuChi;
			}
			set
			{
				if ((this._tenTieuChi != value))
				{
					this.OntenTieuChiChanging(value);
					this.SendPropertyChanging();
					this._tenTieuChi = value;
					this.SendPropertyChanged("tenTieuChi");
					this.OntenTieuChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diemToiDa", DbType="Int")]
		public System.Nullable<int> diemToiDa
		{
			get
			{
				return this._diemToiDa;
			}
			set
			{
				if ((this._diemToiDa != value))
				{
					this.OndiemToiDaChanging(value);
					this.SendPropertyChanging();
					this._diemToiDa = value;
					this.SendPropertyChanged("diemToiDa");
					this.OndiemToiDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuChi_ChiTieuPhieuCham", Storage="_ChiTieuPhieuChams", ThisKey="maTieuChi", OtherKey="maTieuChi")]
		public EntitySet<ChiTieuPhieuCham> ChiTieuPhieuChams
		{
			get
			{
				return this._ChiTieuPhieuChams;
			}
			set
			{
				this._ChiTieuPhieuChams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuChi_NoiDung", Storage="_NoiDungs", ThisKey="maTieuChi", OtherKey="maTieuChi")]
		public EntitySet<NoiDung> NoiDungs
		{
			get
			{
				return this._NoiDungs;
			}
			set
			{
				this._NoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTieuPhieuChams(ChiTieuPhieuCham entity)
		{
			this.SendPropertyChanging();
			entity.TieuChi = this;
		}
		
		private void detach_ChiTieuPhieuChams(ChiTieuPhieuCham entity)
		{
			this.SendPropertyChanging();
			entity.TieuChi = null;
		}
		
		private void attach_NoiDungs(NoiDung entity)
		{
			this.SendPropertyChanging();
			entity.TieuChi = this;
		}
		
		private void detach_NoiDungs(NoiDung entity)
		{
			this.SendPropertyChanging();
			entity.TieuChi = null;
		}
	}
}
#pragma warning restore 1591
